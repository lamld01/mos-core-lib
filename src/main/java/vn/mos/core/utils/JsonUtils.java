package vn.mos.core.utils;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.extern.log4j.Log4j2;

@Log4j2
public class JsonUtils {

    private static final ObjectMapper objectMapper = new ObjectMapper()
            .setSerializationInclusion(JsonInclude.Include.NON_NULL) // ‚úÖ Kh√¥ng serialize gi√° tr·ªã null
            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false); // ‚úÖ Kh√¥ng l·ªói khi JSON c√≥ key th·ª´a

    /**
     * üìù Convert Object ‚Üí JSON String
     */
    public static String toJson(Object object) {
        try {
            return objectMapper.writeValueAsString(object);
        } catch (JsonProcessingException e) {
            log.error("‚ùå Error converting object to JSON: {}", object, e);
            return null;
        }
    }

    /**
     * üîç Convert JSON String ‚Üí Object
     */
    public static <T> T fromJson(String json, Class<T> clazz) {
        try {
            return objectMapper.readValue(json, clazz);
        } catch (Exception e) {
            log.error("‚ùå Error converting JSON to object: {}", json, e);
            return null;
        }
    }
}
